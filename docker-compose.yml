version: "3.9"

volumes:
  local_postgres_data: {}

services:
  proxy:
    image: nginx:alpine
    container_name: nz02
    ports:
      - "8000:8000"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - .:/app
    restart: on-failure
    depends_on:
      - server
    networks:
      - default

  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dz04
    command: daphne -b 0.0.0.0 core.asgi:application
    depends_on:
      migrator:
        condition: service_completed_successfully
    links:
      - redis
    volumes:
      - .:/app
    expose:
      - '8000'  
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - default

  db:
    image: postgres:13.14-alpine
    container_name: pz04
    env_file:
      - .env
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    networks:
      - default
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mg04
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate && 
             python manage.py collectstatic --noinput"
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:alpine
    container_name: rz04
    volumes:
      - ./config/redis/:/etc/redis/
    command: ["redis-server", "/etc/redis/redis.conf"]
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - default

networks:
  default:
    driver: bridge
